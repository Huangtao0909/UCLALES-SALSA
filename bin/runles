#!/bin/sh

###############################################################
## This jobscript is written for the FMI's Cray XC30 system. 
## Job submission is done at the end of the script. It can do 
## both sequential or parallel runs by adjusting the value 
## IsSeq below. For running on simple linux workstation, set 
## IsSeq=1 and simply run ./runles.
##
## Note: For cluster runs, you most likely need to adjust the
## generation of the file job.sh and the job submission command
## to your local system specifications. 
###############################################################

# -------------------------------------------------- <USER SPECIFIED INFORMATION>
IsSeq=1 # 0 for mpi runs with CRAY, 1 for sequential, 2 for mpi on laptop

EXPNAME="sizedist"  # Name of the experiment

NPROCS=1          # Number of processors (for IsSeq==0)
TWALL=8:00:00      # Required wallclock time for batch system

NXP=5               # Number of points in X-direction (including "halo" points)
NYP=100              # Number of points in Y-direction (including "halo" points)
NZP=70              # Number of points in Z-direction
DX=40.              # Resolution in X-direction (meters)
DY=40.              # Resolution in Y-direction (meters)
DZ=20.              # Resolution in Z-direction (meters)
DT=1.               # (max) Timestep length (seconds)
Tspinup=1800.        # Length of the spinup period (seconds)
Texp=43200.         # Length of the experiment (seconds)
LEVEL=4             # Thermodynamic level ( 1-3 for bulk microphysics, 4- for SALSA )
# -------------------------------------------------- </USER SPECIFIED INFORMATION>


# --------------------------------------------------------------- <DO NOT CHANGE>
# Get the current version from GIT (if used - this functionality 
# is not available otherwise and a default value is used)
command -v git 2>&1 >/dev/null
if [ $? -eq 0 ]; then
    ver=`git describe --tags 2>&1`
    if [ $? -ne 0 ]; then
	echo "Ignore possible error, git just doesn't find a version tag - using default value"
	ver=vx.x.x
    fi
else
    ver=latest
fi
# ---------------------------------------------------------------- </DO NOT CHANGE>


# Create namelists
cat > NAMELIST <<EOF

&version
  ver="${ver}"
/

! ----------------------------------------------------------------------------------

&model
  level = ${LEVEL}            ! Thermodynamical level
  nxp =   ${NXP}              ! Number of points in x direction
  nyp =   ${NYP}              ! Number of points in y direction
  nzp =   ${NZP}              ! Number of vertical levels
  deltax = ${DX}              ! Grid spacing in x
  deltay = ${DY}              ! Grid spacing in y
  deltaz = ${DZ}              ! Grid spacing in the vertical
  nxpart = .TRUE.             ! 
  dzmax  = 1500.              ! Height above which start stretching vertical grid
  dzrat  = 1.0                ! Factor for vertical grid stretching
  dtlong = ${DT}              ! Max. timestep
  distim = 100.               ! Timescale for the dissipation in sponge layer
  timmax = ${Texp}            ! Length of the simulation
  runtype = "INITIAL"         ! INITIAL or HISTORY (restart) run
  CCN = 600.e6                ! 
  corflg = .false.            ! Apply coriolis force
  prndtl = -0.3333333         !
  filprf = '${EXPNAME}'       ! Output filename profile
  hfilin = '${EXPNAME}.000600s' ! History file name
  frqhis = 500.
  lbinanl = .TRUE.           ! Write binned microphysical output (with level >= 4)
  lsalsabbins = .TRUE.  
  !mcflg = .FALSE.             ! Do mass conservation statistics

  sed_aero%switch = .TRUE.          ! Calculate sedimentation of aerosol particles
  sed_cloud%switch = .TRUE.          ! - '' - cloud droplets
  sed_cloud%delay = ${Tspinup}
  sed_precp%switch = .TRUE.          ! precipitation
  sed_precp%delay = ${Tspinup}  
  sed_ice%switch = .TRUE.            ! ice particles
  bulk_autoc%switch = .FALSE.
  bulk_autoc%delay = ${Tspinup}      ! Autoconversion switch for level = 1-3

  lnudging = .FALSE.           ! Master swtich for nudging scheme
  lemission = .FALSE.          ! Master switch for aerosol emissions  
  iradtyp = 3                 ! Radiation/large scale forcing
  strtim = 240.6               ! Start time
  case_name = 'default'       ! Case name for large-scale forcing schemes
  div = 1.e-6               ! Large-scale divergence
  cntlat = 25.0
/

! -----------------------------------------------------------------------------------

&output
  ps_intvl = 120.
  main_intvl = 120.
  varlist_main = 'temp','rp','rc','srp','theta','wwind','ri','riri','rh','rhi','naero','ncloud','nprecp','nice'
  varlist_ps = ''
/

! -----------------------------------------------------------------------------------

&initialization
  init_type         = 1       ! 1: random perturbations, 2: warm bubble
  bubble_center     = 1000.,0.,0.
  bubble_diameter   = 1500.,6000.,6000.
  bubble_temp_ampl  = 1.5
  th00              = 300.    ! Reference temperature
  umean             = 0.                
  vmean             = 0.
  itsflg            = 1       ! Flag for temperature type in input sounding
  ipsflg            = 1       ! - '' - for pressure
/

! -------------------------------------------------------------------------------------

&surface
  isfctyp           = 5
  zrough            = 0.005
  ubmin             = -0.25
  sst               = 312.
  dthcon            = 100.
  drtcon            = 0.
  C_heat            = 2.e6
  deepSoilTemp      = 300.
  W1                = 0.2
  W2                = 0.2
  W3                = 0.2
  lConstSoilWater   = .FALSE.
  lConstSoilHeatCap = .TRUE. 
/

! ------------------------------------------------------------------------------------

&radiation
  radsounding = 'datafiles/dsrt.lay'  
  sfc_albedo = 0.4
  laerorad = .FALSE. 
  useMcICA = .TRUE.
/

! -------------------------------------------------------------------------------------

 ! With lnudging = .TRUE.
&nudge
  nudge_time = 7200.          ! Overall time for nudging from the start of the simulation
  ndg_theta%nudgetype = 1
  ndg_theta%tau_type = 2      ! Type of relaxation time (0:constant, 1-3: increasing)
  ndg_theta%tau_min = 60.    ! Min relaxation time (with tau_type=1-3 and constant tau)
  ndg_theta%tau_max = 3600.   ! Max relaxation time (with tau_type=1-3)
  ndg_theta%tau_max_continue = .TRUE.
/

! ---------------------------------------------------------------------------------------

 ! With lemission = .TRUE. and level >= 4
&emission

  nEmissionModes = 2

  emitModes(1)%emitType = 2
  emitModes(1)%regime = 2
  emitModes(1)%start_time = 7200.
  emitModes(1)%end_time = 7201.
  emitModes(1)%species = "SS"
  emitModes(1)%emitHeightMin = 600.
  emitModes(1)%emitHeightMax = 650.
  emitModes(1)%emitSizeDistType = 2
  emitModes(1)%emitDiam = 1.1e-6
  emitModes(1)%emitNum = 0.5e4
  emitModes(1)%emitSigma = 1.5

  emitModes(2)%emitType = 2
  emitModes(2)%regime = 2
  emitModes(2)%start_time = 7200.
  emitModes(2)%end_time = 7201.
  emitModes(2)%species = "SS"
  emitModes(2)%emitHeightMin = 600.
  emitModes(2)%emitHeightMax = 650.
  emitModes(2)%emitSizeDistType = 2
  emitModes(2)%emitDiam = 4.0e-6
  emitModes(2)%emitNum = 0.6e4
  emitModes(2)%emitSigma = 2.

  emitModes(3)%emitType = 3
  emitModes(3)%regime = 2
  emitModes(3)%start_time = 21600.
  emitModes(3)%end_time = 11000.
  emitModes(3)%species = "SS"
  emitModes(3)%emitHeightMin = 600.
  emitModes(3)%emitHeightMax = 650.
  emitModes(3)%emitSizeDistType = 2
  emitModes(3)%emitDiam = 0.6e-6
  emitModes(3)%emitNum = 10.5e6
  emitModes(3)%emitSigma = 1.1
  emitModes(3)%emitMap = 'datafiles/emitMap_1'
  emitModes(3)%scS = 60.                        ! source velocity
  emitModes(3)%z_expan_up = 3
  emitModes(3)%z_expan_dw = 2

/

! -----------------------------------------------------------------------------------------

 ! With level >= 4
&salsa	

   lscoag%switch = .TRUE.
   lscoag%delay = ${Tspinup}

   lscnd%switch = .TRUE.

   lsauto%switch = .TRUE.
   lsauto%delay = ${Tspinup}
   lsauto%mode = 1    ! 1: precip formation based on coagulation, 2: parameterized autoconversion

   lsactiv%switch = .TRUE.
   lsactiv%mode = 1   ! 1: aerosol growth based activation, 2: parameterized cloud base activation

   lsicenucl%switch = .TRUE.
   lsicenucl%delay = 50.

   lsicemelt%switch = .TRUE.

   lscgcc = .TRUE.       ! Self-collection of cloud droplets
   lscgpp = .TRUE.       ! Self-collection of rain drops
   lscgpc = .TRUE.       ! Rain collection of cloud droplets
   lscgaa = .TRUE.       ! Aerosol coagulation
   lscgca = .TRUE.       ! Cloud collection of aerosols
   lscgpa = .TRUE.       ! Rain collection of aerosols
   lscgia = .TRUE.       ! Ice collection of aerosols
   lscgic = .TRUE.       ! Ice collection of cloud droplets
   lscgii = .TRUE.       ! Self-collection of ice
   lscgip = .TRUE.       ! Ice collection of rain drops

   lscndgas    = .FALSE.  ! --Aerosol precursor gas codensation
   lscndh2oae  = .TRUE.  ! --Condensation of water on aerosols (if FALSE, equilibrium assumed)
   lscndh2ocl  = .TRUE.  ! --Condensation of water on cloud droplets (and drizzle)
   lscndh2oic  = .TRUE.  ! --Condensation of water on ice particles

   ice_hom     = .TRUE.
   ice_imm     = .TRUE.
   ice_dep     = .TRUE.

   lscheckarrays = .FALSE.
   lsdistupdate = .TRUE.

   ! Precipitation bin layout parameters
   bloPrc%nbins     = 20        ! Number of bins
   bloPrc%dlo       = 20.e-6    ! Lower limit of the smallest bin
   bloPrc%vol_ratio = 2.        ! Volume ratio between bins

   ! Ice bin layout parameters
   bloIce%nbins     = 20        ! Number of bins
   bloIce%dlo       = 2.e-6    ! Lower limit of the smallest bin
   bloIce%vol_ratio = 3.        ! Volume ratio between bins

   lsfreeRH%switch = .TRUE.
   lsfreeRH%delay = ${Tspinup}
   rhlim = 1.005          ! RH limit for SALSA during initialization and spinup

   isdtyp = 0
   nspec_dry = 1
   listspec = 'SO4','','','','','',''

   ! The number of entries must comply with the max number of _compounds_ (excluding water, currently 7)
   volDistA = 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
   ! The number of entries must comply with the max number of _modes_ (currently 7)  
   sigmagA  = 1.55, 1.8, 1.5, 2.0, 2.0, 2.0, 2.0      ! Geometric stdev for initial aerosol size distribution for isdtyp == 0 (uniform)  
   dpgA     = 0.022, 0.1, 1.0, 0.2, 0.2, 0.2, 0.2   ! Mode mean diameters in micrometers
   nA       = 600., 300., 1., 0., 0., 0., 0.         ! Mode number concentrations in #/cm^3 

   ! The number of entries must comply with the max number of _compounds_ (excluding water, currently 7)
   volDistB = 0.2, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0
   ! The number of entries must comply with the max number of _modes_ (currently 7)
   sigmagB  = 1.2, 1.7, 1.6, 2.0, 2.0, 2.0, 2.0      ! Geometric stdev for initial aerosol size distribution for isdtyp == 0 (uniform) 
   dpgB     = 0.022, 0.12, 1.8, 0.2, 0.2, 0.2, 0.2   ! Mode mean diameters in micrometers
   nB       = 0., 0., 0., 0., 0., 0., 0.             ! Mode number concentrations in #/cm^3 
/

EOF

if [ $IsSeq -eq 0 ]; then

# The stuff below depends entirely on your system specifics #
cat > job.sh <<EOF
#! /bin/sh
#PBS -N ${EXPNAME}
#PBS -l mppwidth=${NPROCS}
#PBS -l mppnppn=28
#PBS -l walltime=${TWALL}

export MPICH_ENV_DISPLAY=1
cd \$PBS_O_WORKDIR

aprun -n ${NPROCS} ./les.mpi | tee uclales-salsa.output

set -ex

EOF

qsub job.sh

elif [ $IsSeq -eq 1 ]; then
    ./les.seq
elif [ $IsSeq -eq 2 ]; then
    mpirun -np ${NPROCS} ./les.mpi
fi
