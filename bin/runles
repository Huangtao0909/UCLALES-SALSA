#!/bin/sh

###############################################################
## This jobscript is written for the FMI's Cray XC30 system. 
## Job submission is done at the end of the script. It can do 
## both sequential or parallel runs by adjusting the value 
## IsSeq below. For running on simple linux workstation, set 
## IsSeq=1 and simply run ./runles.
##
## Note: For cluster runs, you most likely need to adjust the
## generation of the file job.sh and the job submission command
## to your local system specifications. 
###############################################################

# -------------------------------------------------- <USER SPECIFIED INFORMATION>
IsSeq=1 # 0 for mpi runs with CRAY, 1 for sequential, 2 for mpi on laptop

EXPNAME="production_version"  # Name of the experiment

NPROCS=2          # Number of processors (for IsSeq==0)
TWALL=5:00:00      # Required wallclock time for batch system

NXP=5               # Number of points in X-direction (including "halo" points)
NYP=50              # Number of points in Y-direction (including "halo" points)
NZP=70              # Number of points in Z-direction
DX=50.              # Resolution in X-direction (meters)
DY=50.              # Resolution in Y-direction (meters)
DZ=20.              # Resolution in Z-direction (meters)
DT=1.               # (max) Timestep length (seconds)
Tspinup=300.        # Length of the spinup period (seconds)
Texp=43200.         # Length of the experiment (seconds)
LEVEL=3             # Thermodynamic level ( 1-3 for bulk microphysics, 4- for SALSA )
# -------------------------------------------------- </USER SPECIFIED INFORMATION>


# --------------------------------------------------------------- <DO NOT CHANGE>
# Get the current version from GIT (if used - this functionality 
# is not available otherwise and a default value is used)
command -v git 2>&1 >/dev/null
if [ $? -eq 0 ]; then
    ver=`git describe --tags 2>&1`
    if [ $? -ne 0 ]; then
	echo "Ignore possible error, git just doesn't find a version tag - using default value"
	ver=vx.x.x
    fi
else
    ver=latest
fi
# ---------------------------------------------------------------- </DO NOT CHANGE>


# Create namelists
cat > NAMELIST <<EOF

 &version
  ver="${ver}"
 /

 &model
  level = ${LEVEL}            ! Thermodynamical level
  nxp =   ${NXP}              ! Number of points in x direction
  nyp =   ${NYP}              ! Number of points in y direction
  nzp =   ${NZP}              ! Number of vertical levels
  deltax = ${DX}              ! Grid spacing in x
  deltay = ${DY}              ! Grid spacing in y
  deltaz = ${DZ}              ! Grid spacing in the vertical
  nxpart = .true.             ! 
  dzmax  = 1500.              ! Height above which start stretching vertical grid
  dzrat  = 1.0                ! Factor for vertical grid stretching
  dtlong = ${DT}              ! Max. timestep
  distim = 100.               ! Timescale for the dissipation in sponge layer
  timmax = ${Texp}            ! Length of the simulation
  Tspinup = ${Tspinup}        ! Length of the spinup period
  runtype = "INITIAL"         ! INITIAL or HISTORY (restart) run
  CCN = 600.e6                ! 
  corflg = .false.            ! Apply coriolis force
  prndtl = -0.3333333         !
  filprf = '${EXPNAME}'       ! Output filename profile
  hfilin = '${EXPNAME}.h.rst'
  ssam_intvl = 120.           ! Interval for statistical output
  savg_intvl = 120.           ! Averaging interval for stat output
  frqanl = 60.                ! Interval for full domain output
  lbinanl = .FALSE.           ! Write binned microphysical output (with level >= 4)
  salsa_b_bins = .TRUE.
  mcflg = .FALSE.             ! Do mass conservation statistics
  sed_aero = .FALSE.          ! Calculate sedimentation of aerosol particles
  sed_cloud = .TRUE.          ! - '' - cloud droplets
  sed_precp = .TRUE.          ! precipitation
  sed_ice = .TRUE.            ! ice particles
  sed_snow = .TRUE.           ! snow flakes/precipitating ice
  itsflg = 1                  ! Flag for temperature type in input sounding
  ipsflg = 1                  ! - '' - for pressure
  lnudging = .FALSE.           ! Master swtich for nudging scheme
  lemission = .FALSE.          ! Master switch for aerosol emissions  
  iradtyp = 3                 ! Radiation/large scale forcing
  strtim = 45.4               ! Start time
  case_name = 'default'       ! Case name for large-scale forcing schemes
  div = 3.00e-6               ! Large-scale divergence
  dthcon = 0.0                ! Sensible heat flux
  drtcon = 10.0               ! Latent heat flux
  sst = 290.5                 ! Surface temperature
  zrough = 0.001                ! Roughness length
  ubmin = -0.25
  th00 = 289.                 ! Reference temperature
  umean =  0.1                
  vmean = -0.1
 /

 ! With iradtyp = 3
 &radiation

  radsounding = 'datafiles/dsrt.lay'  
  sfc_albedo = 0.3

 /

 ! With lnudging = .TRUE.
 &nudge

  nudge_time = 15000.          ! Overall time for nudging from the start of the simulation

  ndg_theta%nudgetype = 1
  ndg_theta%tau_type = 2      ! Type of relaxation time (0:constant, 1-3: increasing)
  ndg_theta%tau_min = 100.    ! Min relaxation time (with tau_type=1-3 and constant tau)
  ndg_theta%tau_max = 2000.   ! Max relaxation time (with tau_type=1-3)

 /

 ! With lemission = .TRUE. and level >= 4
 &emission

  nEmissionModes = 2

  emitModes(1)%emitType = 2
  emitModes(1)%regime = 1
  emitModes(1)%start_time = 10.
  emitModes(1)%end_time = 11.
  emitModes(1)%species = "SS"
  emitModes(1)%emitHeightMin = 800.
  emitModes(1)%emitHeightMax = 1000.
  emitModes(1)%emitSizeDistType = 2
  emitModes(1)%emitDiam = 2.0e-6
  emitModes(1)%emitNum = 1.e6
  emitModes(1)%emitSigma = 1.3

  emitModes(2)%emitType = 2
  emitModes(2)%regime = 2
  emitModes(2)%start_time = 15.
  emitModes(2)%end_time = 16.
  emitModes(2)%species = "SS"
  emitModes(2)%emitHeightMin = 800.
  emitModes(2)%emitHeightMax = 1000.
  emitModes(2)%emitSizeDistType = 2
  emitModes(2)%emitDiam = 8.0e-6
  emitModes(2)%emitNum = 1.e5
  emitModes(2)%emitSigma = 2.


 /

 ! With level >= 4
 &salsa	

   nlcoag = .TRUE.       ! Master coagulation switch
   nlcgcc = .TRUE.       ! Self-collection of cloud droplets
   nlcgpp = .TRUE.       ! Self-collection of rain drops
   nlcgpc = .TRUE.       ! Rain collection of cloud droplets
   nlcgaa = .FALSE.      ! Aerosol coagulation
   nlcgca = .TRUE.       ! Cloud collection of aerosols
   nlcgpa = .TRUE.       ! Rain collection of aerosols
   nlcgia = .TRUE.       ! Ice collection of aerosols
   nlcgic = .TRUE.       ! Ice collection of cloud droplets
   nlcgii = .TRUE.       ! Self-collection of ice
   nlcgip = .TRUE.       ! Ice collection of rain drops
   nlcgsa = .TRUE.       ! Snow collection of aerosols
   nlcgsc = .TRUE.       ! Snow collection of cloud droplets
   nlcgsi = .TRUE.       ! Snow collection of ice particles
   nlcgsp = .TRUE.       ! Snow collection of rain drops
   nlcgss = .TRUE.       ! Self-collection of snow

   nlcnd       = .TRUE.  ! Master condensation switch
   nlcndgas    = .FALSE.  ! --Aerosol precursor gas codensation
   nlcndh2oae  = .TRUE.  ! --Condensation of water on aerosols (if FALSE, equilibrium assumed)
   nlcndh2ocl  = .TRUE.  ! --Condensation of water on cloud droplets (and drizzle)
   nlcndh2oic  = .TRUE.  ! --Condensation of water on ice particles
   nlauto      = .TRUE.  ! Master autoconversion switch
   nlautosnow  = .FALSE. ! Master snow autoconversion switch
   nlactiv     = .TRUE.  ! Master cloud activation switch
   nlactbase   = .FALSE.  ! --Switch for parameterized cloud base activation
   nlactintst  = .TRUE.  ! --Switch for interstitial activation based on host model Smax

   nlicenucl   = .TRUE.
   ice_hom     = .FALSE.
   ice_imm     = .TRUE.
   ice_dep     = .TRUE.

   rhlim = 1.2          ! RH limit for SALSA during initialization and spinup

   isdtyp = 0
   nspec = 2
   listspec = 'SO4','DU','','','','',''
   volDistA = 0.7, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0   
   volDistB = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
   nf2a = 1.0

   sigmag = 1.2, 1.7, 2.0, 2.0, 2.0, 2.0, 2.0  ! Stdev for initial aerosol size distribution for isdtyp == 0 (uniform)  
   dpg = 0.022, 0.12, 0.2, 0.2, 0.2, 0.2, 0.2   ! Mode mean diameters in micrometers
   n = 400., 300., 0., 0., 0., 0., 0.         ! Mode number concentrations in #/cm^3
 
 /


EOF

if [ $IsSeq -eq 0 ]; then

# The stuff below depends entirely on your system specifics #
cat > job.sh <<EOF
#! /bin/sh
#PBS -N ${EXPNAME}
#PBS -l mppwidth=${NPROCS}
#PBS -l mppnppn=28
#PBS -l walltime=${TWALL}

export MPICH_ENV_DISPLAY=1
cd \$PBS_O_WORKDIR

aprun -n ${NPROCS} ./les.mpi | tee uclales-salsa.output

set -ex

EOF

qsub job.sh

elif [ $IsSeq -eq 1 ]; then
    ./les.seq
elif [ $IsSeq -eq 2 ]; then
    mpirun -np ${NPROCS} ./les.mpi
fi
